@page "/register"
@using WebApplication3.Client.ViewModels
@inject IRegisterViewModel _registerViewModel
@using BlazorInputFile
@using Radzen
@using System.IO
@inject NavigationManager _navigationManager

<h2><b>Register</b></h2>
<div class="col-12">
    <div class="col-8">
        <RadzenCard>
            <input type="text" @bind-value="_registerViewModel.FirstName" class="form-control" placeholder="first name">
            <br />
            <input type="text" @bind-value="_registerViewModel.LastName" class="form-control" placeholder="last name">
            <br />
            <input type="text" @bind-value="_registerViewModel.EmailAddress" class="form-control" placeholder="email address">
            <br />
            <input type="password" @bind-value="_registerViewModel.Password" class="form-control" placeholder="password">
            <br />
            <img src="@_registerViewModel.ProfilePic" style="width: 250px; height: 250px;"> <br /> <br />
            <InputFile OnChange="@OnInputFileChanged"></InputFile>
            <br />
            <div class="col-8"><button class="btn btn-secondary" @onclick="RegisterUser">Sign up!</button></div>
            
        </RadzenCard>     
    </div>
</div>
@code {
    public string ProfilePicDataUrl { get; set; }

    private async Task OnInputFileChanged(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        var img = await file.ToImageFileAsync("image/jpeg", 250, 250);
        MemoryStream memory = await img.ReadAllAsync();
        _registerViewModel.ProfilePic = ToDataUrl(memory, "image/jpeg");
    }
    public string ToDataUrl(MemoryStream data, string format)
    {
        var span = new Span<byte>(data.GetBuffer()).Slice(0, (int)data.Length);
        return $"data:{format};base64,{Convert.ToBase64String(span)}";
    }
    public async Task RegisterUser()
    {
        await _registerViewModel.SaveProfile();
        _navigationManager.NavigateTo("/", true);
    }

}
